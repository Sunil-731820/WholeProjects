<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><entry><title>How Kamelets simplify Camel integrations on Kubernetes</title><link rel="alternate" href="https://developers.redhat.com/articles/2022/11/01/how-kamelets-simplify-camel-integrations-kubernetes" /><author><name>Mohammadi Iram</name></author><id>21c2c77b-e4dc-4e1e-a818-58d4aee3d5bf</id><updated>2022-11-01T07:00:00Z</updated><published>2022-11-01T07:00:00Z</published><summary type="html">&lt;p&gt;Modern applications, rarely coded from scratch, are formed by combining software components (known as subsystems) into a single system. This process is called integration. Typical subsystems include databases and web services. This article explains how &lt;a href="https://camel.apache.org"&gt;Apache Camel&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/kubernetes"&gt;Kubernetes&lt;/a&gt; support easy integration of such services through &lt;a href="https://camel.apache.org/camel-k/1.10.x/kamelets/kamelets-user.html"&gt;Kamelets&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;How Kamelets make Camel integration easy&lt;/h2&gt; &lt;p&gt;Apache Camel is a popular open source integration framework based on known Enterprise Integration Patterns (EIPs). Camel is a complete, production-ready framework with a built-in set of patterns you can use in your integration flows. These patterns are based on design patterns and help connect different systems.&lt;/p&gt; &lt;p&gt;Developers build many frameworks on Apache Camel. This article focuses on &lt;a href="https://camel.apache.org/camel-k/"&gt;Camel K&lt;/a&gt;, but several other frameworks exist, such as Camel Kafka and Camel Quarkus.&lt;/p&gt; &lt;p&gt;Camel K is a lightweight integration framework based on Apache Camel that runs natively on Kubernetes to create serverless and microservice architectures. Camel K allows you to write configuration instructions in the YAML format. The YAML file is known as a Kamelet. Any Kubernetes cluster can deploy a Kamelet as a resource.&lt;/p&gt; &lt;p&gt;An example of a simple Kamelet follows:&lt;/p&gt; &lt;pre&gt; &lt;code&gt;apiVersion: camel.apache.org/v1alpha1 kind: KameletBinding metadata: name: integration spec: source: ref: apiVersion: camel.apache.org/v1alpha1 name: aws-ddb-streams-source kind: Kamelet sink: ref: apiVersion: camel.apache.org/v1alpha1 name: pulsar-sink kind: Kamelet&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Kamelets make it easy to exploit the power of Camel K without previous knowledge of that tool. Kamelets are integration snippets with connectors, in the form of sources and sinks, that allow you to connect to external systems using a simplified interface that hides the details of a connection.&lt;/p&gt; &lt;h3&gt;4 Advantages of Kamelets&lt;/h3&gt; &lt;p&gt;Developers are turning to Kamelets for several reasons:&lt;/p&gt; &lt;ol&gt;&lt;li&gt;Kamelets simplify and streamline the integration of services into Kubernetes.&lt;/li&gt; &lt;li&gt;You can employ Camel's powerful integration through a Kamelet without any prior knowledge of Camel.&lt;/li&gt; &lt;li&gt;Kamelets offer connectors for &lt;a href="https://developers.redhat.com/topics/event-driven"&gt;event-driven applications&lt;/a&gt;. Events are becoming increasingly important, particularly with microservices. As event-driven applications spread, many organizations and developers have begun to use &lt;a href="https://kafka.apache.org"&gt;Apache Kafka&lt;/a&gt; and &lt;a href="https://knative.dev/docs/"&gt;Knative&lt;/a&gt; as the backbone for connecting all of the systems' applications.&lt;/li&gt; &lt;li&gt;Kamelets make it easy to reuse code for different use cases.&lt;/li&gt; &lt;/ol&gt;&lt;h3&gt;3 Types of Kamelets&lt;/h3&gt; &lt;p&gt;Kamelets are classified into three types:&lt;/p&gt; &lt;ol&gt;&lt;li&gt;Source: Consumes data from an external system into your platform.&lt;/li&gt; &lt;li&gt;Sink: Sends data to an external system or performs an action on the data.&lt;/li&gt; &lt;li&gt;Action: Performs an intermediate step: For example, an action can convert an event to a PDF file before it is saved to a sink.&lt;/li&gt; &lt;/ol&gt;&lt;p&gt;You can use a sink or a source to listen to or trigger several types of events, like a channel or a broker. For example, a Kafka channel can be directly connected to a JMS broker using Kamelets. In another example, the Aws-ddb-streams-source can take data from an &lt;a href="https://aws.amazon.com/dynamodb/"&gt;Amazon DynamoDB&lt;/a&gt; database, and the &lt;a href="https://pulsar.apache.org/docs/io-overview/"&gt;pulsar-sink&lt;/a&gt; sink could then store this data elsewhere.&lt;/p&gt; &lt;h3&gt;Advanced features of Kamelets&lt;/h3&gt; &lt;ul&gt;&lt;li&gt;KameletBindings provide a source and a sink as a pair.&lt;/li&gt; &lt;li&gt;You can store Kamelets in a catalog, similar to a GitHub repository. &lt;a href="https://github.com/KaotoIO/kaoto-ui"&gt;Kaoto&lt;/a&gt; is a catalog provided by my team. Kaoto is a free, open-source tool that provides a simple integration framework based on Apache Camel, making it easier to visualize your integrations and create Kamelets.&lt;/li&gt; &lt;/ul&gt;&lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;Kamelets advanced features make it easy to utilize Camel K. You can connect to external systems using a simplified interface that hides connection details. There are many advantages to using Kamelets for application integration. Learn more by reviewing the &lt;a href="https://github.com/KaotoIO/kaoto-ui"&gt;Kaoto&lt;/a&gt; catalog. Feel free to comment below. We welcome your feedback.&lt;/p&gt; The post &lt;a href="https://developers.redhat.com/articles/2022/11/01/how-kamelets-simplify-camel-integrations-kubernetes" title="How Kamelets simplify Camel integrations on Kubernetes"&gt;How Kamelets simplify Camel integrations on Kubernetes&lt;/a&gt; appeared first on &lt;a href="https://developers.redhat.com/blog" title="Red Hat Developer"&gt;Red Hat Developer&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;</summary><dc:creator>Mohammadi Iram</dc:creator><dc:date>2022-11-01T07:00:00Z</dc:date></entry><entry><title>Best practices for application shutdown with OpenSSL</title><link rel="alternate" href="https://developers.redhat.com/articles/2022/10/31/best-practices-application-shutdown-openssl" /><author><name>Dmitry Belyavskiy</name></author><id>043f762e-53b8-4d20-b470-c1a30f2f3b5a</id><updated>2022-10-31T07:00:00Z</updated><published>2022-10-31T07:00:00Z</published><summary type="html">&lt;p&gt;&lt;a href="https://www.openssl.org"&gt;OpenSSL&lt;/a&gt; is an essential library for &lt;a href="https://developers.redhat.com/topics/secure-coding"&gt;securing&lt;/a&gt; web traffic. This article offers simple procedures for initializing and terminating applications using OpenSSL. Modern applications that are more complex than "Hello, world!" usually require several external libraries like OpenSSL, which in turn often need to be properly initialized on startup and deinitialized on shutdown.&lt;/p&gt; &lt;p&gt;OpenSSL libraries are set up internally during program initialization. At this time, they load the configuration file, allocate resources, and &lt;a href="https://developers.redhat.com/articles/2022/05/31/your-go-application-fips-compliant"&gt;handle FIPS mode&lt;/a&gt;, among many other tasks.&lt;/p&gt; &lt;p&gt;The OpenSSL API function for initialization is &lt;code&gt;OPENSSL_init_crypto&lt;/code&gt;. This function &lt;a href="https://www.openssl.org/docs/man3.0/man3/OPENSSL_init_crypto.html"&gt;accepts a variety of options&lt;/a&gt; with reasonable defaults. Initialization should be performed before any other OpenSSL function is used, though some OpenSSL functions invoke &lt;code&gt;OPENSSL_init_crypto&lt;/code&gt; themselves.&lt;/p&gt; &lt;h2&gt;Cleaning up in an atexit function&lt;/h2&gt; &lt;p&gt;When you shut down your application, you need to free the resources you acquired. Because developers don't always code accurately, OpenSSL relies on a function provided by the C runtime library named &lt;a href="https://man7.org/linux/man-pages/man3/atexit.3.html"&gt;atexit&lt;/a&gt;. This function specifies a cleanup function that will be executed upon normal termination of the application.&lt;/p&gt; &lt;p&gt;&lt;code&gt;atexit&lt;/code&gt; is useful for many purposes, so it is widely used. Even though most resources are freed on any program termination, it's always better to free them explicitly–for example, to prevent false positives from being turned up by &lt;a href="https://valgrind.org"&gt;Valgrind&lt;/a&gt; or similar tools searching for memory leaks.&lt;/p&gt; &lt;p&gt;The problem with &lt;code&gt;atexit&lt;/code&gt; is that real-life applications use many different libraries, each of which might install its own cleanup function. Although the &lt;code&gt;atexit&lt;/code&gt; man page declares that the registered functions are called in the reverse order of their registration, the real order of execution is not predictable in practice.&lt;/p&gt; &lt;p&gt;One obvious scenario where the order is undefined is a multithreaded setup. Various plugins and third-party libraries might have their own &lt;code&gt;atexit&lt;/code&gt; handlers that can be loaded at runtime, which can be another possible source of problems.&lt;/p&gt; &lt;p&gt;Executing cleanup functions in the wrong order can cause a crash on application shutdown. For example, an application might establish an SSL connection and create the corresponding objects. On shutdown, if the SSL object is deleted before the OpenSSL cleanup, everything is OK, but otherwise a crash will occur. This example is a real bug &lt;a href="https://github.com/nmap/nmap/issues/2482"&gt;found recently&lt;/a&gt; by Nmap users. Originally reported for Solaris, it was later reproduced on a Fedora machine. If you find problems in a specific application or library, it's worth filing a bug in the hope that the problem will be fixed.&lt;/p&gt; &lt;p&gt;Problems with &lt;code&gt;atexit&lt;/code&gt; handlers are reported to the upstream OpenSSL developers, Red Hat, and Fedora developers on a regular basis. There are several ways to solve the problems.&lt;/p&gt; &lt;p&gt;The authors of Nmap &lt;a href="https://github.com/nmap/nmap/commit/5f88cbac30c438587de6d01c13327f9b7316c94f"&gt;resolved&lt;/a&gt; the reported issue by using one more function from the OpenSSL API: &lt;code&gt;OPENSSL_atexit&lt;/code&gt;. This function registers an application-specific handler, which is a suitable location for ensuring the order of resource deinitialization. The approach used in Nmap could cause a memory leak in some circumstances, but because it happens during shutdown, that isn't too much of a big deal. However, we don't recommend this option because memory leaks on shutdown make it more difficult to search for important runtime memory leaks. Using &lt;code&gt;OPENSSL_atexit&lt;/code&gt; also makes code more complex.&lt;/p&gt; &lt;h2&gt;Recommended initialization and shutdown procedure&lt;/h2&gt; &lt;p&gt;The best option is a properly serialized deinitialization, during which the &lt;code&gt;atexit&lt;/code&gt; hooks are executed in the correct order, all the application threads terminate except the main one, etc. This sequence requires you to be thorough in your coding, but it's worth the effort.&lt;/p&gt; &lt;p&gt;If your application has to shut down manually, OpenSSL authors suggest a procedure with two parts.&lt;/p&gt; &lt;p&gt;First, the application should use the &lt;code&gt;OPENSSL_INIT_NO_ATEXIT&lt;/code&gt; option in the &lt;code&gt;OPENSSL_init_crypto&lt;/code&gt; call at OpenSSL initialization, to avoid implicit installation of the OpenSSL cleanup handler. After that, when the application terminates and no further OpenSSL functions will be called, invoke &lt;code&gt;OPENSSL_cleanup&lt;/code&gt; explicitly to free resources on shutdown.&lt;/p&gt; &lt;p&gt;In conclusion, a manual shutdown option is useful for some libraries, but a predictable order of initialization and deinitialization is preferable.&lt;/p&gt; The post &lt;a href="https://developers.redhat.com/articles/2022/10/31/best-practices-application-shutdown-openssl" title="Best practices for application shutdown with OpenSSL"&gt;Best practices for application shutdown with OpenSSL&lt;/a&gt; appeared first on &lt;a href="https://developers.redhat.com/blog" title="Red Hat Developer"&gt;Red Hat Developer&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;</summary><dc:creator>Dmitry Belyavskiy</dc:creator><dc:date>2022-10-31T07:00:00Z</dc:date></entry><entry><title type="html">Grace Hopper Celebration Recap</title><link rel="alternate" href="https://wildfly-security.github.io/wildfly-elytron/blog/ghc22-recap/" /><author><name>Farah Juma</name></author><id>https://wildfly-security.github.io/wildfly-elytron/blog/ghc22-recap/</id><updated>2022-10-31T00:00:00Z</updated><dc:creator>Farah Juma</dc:creator></entry><entry><title type="html">Announcing Dashbuilder VSCode extension</title><link rel="alternate" href="https://blog.kie.org/2022/10/announcing-dashbuilder-vscode-extension.html" /><author><name>William Siqueira</name></author><id>https://blog.kie.org/2022/10/announcing-dashbuilder-vscode-extension.html</id><updated>2022-10-28T20:42:52Z</updated><content type="html">We are glad to announce that the Dashbuilder has been released! With this extension you can create dashboards using YAML files on local VS Code, VS Code Web (github.dev) and also published on marketplace. The extension can also be downloaded as part of . HOW TO CREATE DASHBOARDS WITH DASHBUILDER? Dashbuilder supports YAML and JSON dashboards definitions. To learn more about it you can check our , the from Dashbuilder website and an article from Manaswini Das about . To create dashboards you can use the or the new VSCode extension. DASHBUILDER EXTENSION VS CODE INSTALLATION To install dashbuilder editor on VS Code go to the “Extensions” and search for “dashbuilder”. Click on install and you should be able to edit dashboards using YAML (.dash.yaml) or JSON (.dash.json). Once installed, open a dashbuilder definition file with text editor and Dashbuilder editor should be opened on the side.  Dashbuilder extension is also available on VS Code web, you just have to install the extension. CONCLUSION In this post we announced the Dashbuilder VS Code extension. We hope to improve the editor for next releases with content assist, editor augmentation and more, so stay tuned! The post appeared first on .</content><dc:creator>William Siqueira</dc:creator></entry><entry><title type="html">Using Open Telemetry API in your Microservices</title><link rel="alternate" href="http://www.mastertheboss.com/eclipse/eclipse-microservices/using-open-telemetry-api-in-your-microservices/" /><author><name>F.Marchioni</name></author><id>http://www.mastertheboss.com/eclipse/eclipse-microservices/using-open-telemetry-api-in-your-microservices/</id><updated>2022-10-28T12:47:00Z</updated><content type="html">OpenTelemetry is a collection of APIs, SDKs, tools you can use to instrument, generate, capture and export telemetry data. This article shows an example of how you can send and capture telemetry data with a Jakarta EE 10 application server such as WildFly. In the era of cloud-native applications, it is pretty common to combine ... The post appeared first on .</content><dc:creator>F.Marchioni</dc:creator></entry><entry><title type="html">How to configure distributed EJB Timers</title><link rel="alternate" href="http://www.mastertheboss.com/java-ee/ejb-3/how-to-configure-distributed-ejb-timers/" /><author><name>F.Marchioni</name></author><id>http://www.mastertheboss.com/java-ee/ejb-3/how-to-configure-distributed-ejb-timers/</id><updated>2022-10-27T18:20:32Z</updated><content type="html">Do you need to scale your EJB Timers at its bests ? WildFly 27 supports a new mechanism for storing your Timers in a cluster: distributed EJB Timers. In this article we will learn how to configure it in no time. EJB Timers overview The default Timer implementation of EJB Timers before WildFly 27 relies ... The post appeared first on .</content><dc:creator>F.Marchioni</dc:creator></entry><entry><title>How to install VMs and Ansible Automation Platform on Mac M1</title><link rel="alternate" href="https://developers.redhat.com/articles/2022/10/25/how-install-vms-and-ansible-automation-platform-mac-m1" /><author><name>Arnav Bhati</name></author><id>53808b9c-70a3-46fe-b29a-3b371aa6152c</id><updated>2022-10-25T07:00:00Z</updated><published>2022-10-25T07:00:00Z</published><summary type="html">&lt;p&gt;Most of the time, we create our own Ansible playground to test Playbooks, features of the Red Hat Ansible Automation Platform (AAP), and many other things. We create our dedicated environment to test AAP for faster troubleshooting and resolution of customer issues.&lt;/p&gt; &lt;p&gt;Previously, it was a pain to install virtual machines on a Mac with an M1 chip. But now, &lt;a href="https://developers.redhat.com/products/rhel/overview"&gt;Red Hat Enterprise Linux&lt;/a&gt; (RHEL) VMs can be easily installed using &lt;a href="https://mac.getutm.app/"&gt;UTM&lt;/a&gt;, a system emulator and virtual machine host for macOS.&lt;/p&gt; &lt;h2&gt;How to install a RHEL VM using UTM&lt;/h2&gt; &lt;p&gt;It should take less than two hours to finish the setup, including installation.&lt;/p&gt; &lt;p&gt;To create VMs (RHEL 8.6 for automation controller) on Mac M1 machines using UTM, follow these steps:&lt;/p&gt; &lt;ol&gt;&lt;li&gt; &lt;p&gt;Download and install &lt;a href="https://mac.getutm.app/"&gt;UTM&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;After installation, click “+” to create a VM.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Select &lt;strong&gt;virtualize&lt;/strong&gt; and click &lt;strong&gt;Linux&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Download the &lt;a href="https://developers.redhat.com/products/rhel/download"&gt;RHEL 8&lt;/a&gt; ISO DVD image.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Click on &lt;strong&gt;browse &lt;/strong&gt;and select the image. Then click &lt;strong&gt;continue&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Select the RAM for the automation platform as per the AAP-2.2 minimum requirements &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.2/html/red_hat_ansible_automation_platform_installation_guide/planning-installation#automation_controller"&gt;document&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Select the 100GB disk size, then click &lt;strong&gt;continue&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Give the appropriate name to your VM, then check the &lt;strong&gt;Open VM Settings&lt;/strong&gt; button.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Navigate to the &lt;strong&gt;network&lt;/strong&gt; section. Under &lt;strong&gt;network mode,&lt;/strong&gt; select &lt;strong&gt;bridged (advanced)&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Click the &lt;strong&gt;Play&lt;/strong&gt; button to start the installation.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Fill in the details you need to install RHEL 8 as your VM.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;After the installation is complete, close the VM.&lt;/li&gt; &lt;li&gt; &lt;p&gt;Click the VM name in UTM and unselect the CD/DVD option. Now your RHEL machine will start normally.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Enable the wired connection from the network connection settings.&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt;&lt;p&gt;Figure 1 illustrates the installed RHEL 8 VM.&lt;/p&gt; &lt;figure class="align-center" role="group"&gt;&lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content"&gt;&lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/VM-screenshot.jpg" data-featherlight="image"&gt;&lt;img loading="lazy" src="https://developers.redhat.com/sites/default/files/styles/article_floated/public/VM-screenshot.jpg?itok=Knzu8wsp" width="600" height="371" alt="A screenshot of the installed RHEL 8 virtual machine." typeof="Image" /&gt;&lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 1: Your VM is ready to use! &lt;/div&gt; &lt;/div&gt; &lt;/article&gt;&lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;Install AAP on RHEL VM&lt;/h2&gt; &lt;p&gt;To get your VM ready to install AAP 2.2, follow these steps:&lt;/p&gt; &lt;ol&gt;&lt;li&gt; &lt;p&gt;Open the terminal and type &lt;code&gt;ifconfig&lt;/code&gt;. Note that the IP address will be in a similar subnet of your Mac IP address.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Open a terminal in your Mac machine and connect from your Mac to the newly created VM via SSH.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Now your VM is ready to install AAP 2.2. Create a Red Hat Registry Service Account, following the instructions in the &lt;a href="https://access.redhat.com/RegistryAuthentication#creating-registry-service-accounts-6"&gt;Creating Registry Service Accounts guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt;&lt;p&gt;Now install AAP 2.2 by following these steps:&lt;/p&gt; &lt;ol&gt;&lt;li&gt;Download AAP-2.2 from the &lt;a href="https://access.redhat.com/downloads/content/480/ver=2.1/rhel---8/2.1/x86_64/product-software" id="isPasted"&gt;Red Hat Ansible Automation Platform Product Software&lt;/a&gt; site.&lt;/li&gt; &lt;li&gt;Edit the inventory file and add the correct hostname for your automation controller.&lt;/li&gt; &lt;li&gt;Mandatory parameters for inventory file: &lt;ul&gt;&lt;li&gt;[automationcontroller]&lt;/li&gt; &lt;li&gt;[all:vars]: Admin password for your AAP controller&lt;/li&gt; &lt;li&gt;pg_password: Add password for database.&lt;/li&gt; &lt;li&gt;registry_username and registry_password: Credentials for container registry to pull execution environment images.&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;Run the &lt;strong&gt;setup.sh&lt;/strong&gt; script.&lt;/li&gt; &lt;/ol&gt;&lt;p&gt;The following listing illustrates a snippet of the inventory file for AAP-2.2 installation.&lt;/p&gt; &lt;pre&gt; &lt;code class="language-bash"&gt;# control.example node_type=control # hybrid.example node_type=hybrid # hybrid2.example &amp;lt;- this will default to hybrid [automationcontroller] #192.168.0.9 ansible_connection=local #127.0.0.1 ansible_connection=local aap ansible_connection=local [automationcontroller:vars] peers=execution_nodes&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After successfully finishing the setup script, you can access the automation controller server from &lt;code&gt;https://&lt;TOWER_SERVER_NAME&gt;/&lt;/code&gt;. In this scenario we are using &lt;code&gt;aap&lt;/code&gt; as the hostname, so the URL will be &lt;code&gt;https://app/&lt;/code&gt; to access our automation controller UI.&lt;/p&gt; &lt;p&gt;Figure 2 illustrates the UI for the AAP-2.2 controller.&lt;/p&gt; &lt;figure class="align-center rhd-u-has-filter-caption" role="group"&gt;&lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content"&gt;&lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/AAP-2.2.png" data-featherlight="image"&gt;&lt;img loading="lazy" src="https://developers.redhat.com/sites/default/files/styles/article_floated/public/AAP-2.2.png?itok=2w1r6ZMj" width="600" height="392" alt="Figure 3 : AAP controller UI" typeof="Image" /&gt;&lt;/a&gt; &lt;/div&gt; &lt;/article&gt;&lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;Figure 2: AAP-2.2 controller UI&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Note that the newly created VM should define a hostname in &lt;code&gt;/etc/hostname&lt;/code&gt;. It would be best if you used this name in the automation controller. Otherwise, the installation will fail. Here's how you'd check the hostname of the controller machine in this file:&lt;/p&gt; &lt;pre&gt; &lt;code class="language-bash"&gt;[root@aap aap-2.2-test]# cat /etc/hostname aap&lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;Now that we have shown you how easy it is to install RHEL VMs using UTM, try it for yourself. Refer to the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.2"&gt;Red Hat Ansible Automation Platform 2.2 Documentation&lt;/a&gt; and &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.2/html/red_hat_ansible_automation_platform_installation_guide" id="isPasted"&gt;Red Hat Ansible Automation Platform Installation Guide&lt;/a&gt; for further information and resources. Feel free to comment below. We welcome your feedback.&lt;/p&gt; The post &lt;a href="https://developers.redhat.com/articles/2022/10/25/how-install-vms-and-ansible-automation-platform-mac-m1" title="How to install VMs and Ansible Automation Platform on Mac M1"&gt;How to install VMs and Ansible Automation Platform on Mac M1&lt;/a&gt; appeared first on &lt;a href="https://developers.redhat.com/blog" title="Red Hat Developer"&gt;Red Hat Developer&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;</summary><dc:creator>Arnav Bhati</dc:creator><dc:date>2022-10-25T07:00:00Z</dc:date></entry><entry><title type="html">Eclipse Vert.x 3.9.14 released!</title><link rel="alternate" href="https://vertx.io/blog/eclipse-vert-x-3-9-14" /><author><name>Julien Viet</name></author><id>https://vertx.io/blog/eclipse-vert-x-3-9-14</id><updated>2022-10-25T00:00:00Z</updated><content type="html">Eclipse Vert.x version 3.9.14 has just been released.</content><dc:creator>Julien Viet</dc:creator></entry><entry><title>Podman expands to the Desktop</title><link rel="alternate" href="https://developers.redhat.com/articles/2022/10/24/podman-expands-desktop" /><author><name>Stevan Le Meur, Tim deBoer</name></author><id>9c5e0744-8573-42ae-a2f9-bddc73643f88</id><updated>2022-10-24T20:59:37Z</updated><published>2022-10-24T20:59:37Z</published><summary type="html">&lt;p&gt;At KubeCon North America 2022, the Podman community unveiled introduced &lt;a href="https://podman-desktop.io/"&gt;Podman Desktop&lt;/a&gt;, a new tool for developers. Podman Desktop allows developers to install, configure, and keep their container engine (Podman) up to date with a GUI. This convenient GUI enables users to interact with containers and pods running in Podman (Figure 1).&lt;/p&gt; &lt;p&gt;Podman Desktop also provides an easy deployment to &lt;a href="https://developers.redhat.com/topics/kubernetes"&gt;Kubernetes&lt;/a&gt; for developers working with &lt;a href="https://developers.redhat.com/topics/containers/"&gt;containers&lt;/a&gt; on their laptops, allowing a seamless transition from containers to pods and pods to Kubernetes. Podman expands to the desktop to provide a complete experience enabling developers to easily work with containers.&lt;/p&gt; &lt;figure class="align-center" role="group"&gt;&lt;div class="rhd-c-figure"&gt; &lt;article class="media media--type-image media--view-mode-article-content"&gt;&lt;div class="field field--name-image field--type-image field--label-hidden field__items"&gt; &lt;a href="https://developers.redhat.com/sites/default/files/PodmanDesktop-image.jpg" data-featherlight="image"&gt;&lt;img loading="lazy" src="https://developers.redhat.com/sites/default/files/styles/article_floated/public/PodmanDesktop-image.jpg?itok=mxUPiiv5" width="600" height="451" alt="Screenshot of the Podman desktop." typeof="Image" /&gt;&lt;/a&gt; &lt;/div&gt; &lt;div class="field field--name-field-caption field--type-string field--label-hidden field__items"&gt; &lt;div class="rhd-c-caption field__item"&gt; Figure 1: Podman Desktop is available on Windows, Mac, and Linux. &lt;/div&gt; &lt;/div&gt; &lt;/article&gt;&lt;/div&gt; &lt;figcaption class="rhd-c-caption"&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;Motivation for the Podman Desktop initiative&lt;/h2&gt; &lt;p&gt;Containers have become a fundamental part of a developer’s workflow. There is no avoiding them.&lt;/p&gt; &lt;p&gt;Containers are commonly used for:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;Standing up a local database&lt;/li&gt; &lt;li&gt;Testing containers or a set of services via compose&lt;/li&gt; &lt;li&gt;Building an application to deploy on the &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift&lt;/a&gt; container platform or some other Kubernetes variant&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;How do we interact with containers on the desktop today? The majority of developers use Docker Desktop for local containers. But most container engines do not have a UI. Instead, developers have been using terminal windows, IDE extensions, or Kubernetes consoles. Developers have also been learning &lt;code&gt;kubectl&lt;/code&gt; to interact with containers.&lt;/p&gt; &lt;p&gt;These tools have their place in spite of their inconsistencies and the difficulty of bridging or interacting with multiple environments. Over time, however, developers must deal with higher complexity and additional overhead. The gaps and discrepancies between developing on the desktop and target Kubernetes production environments are becoming more challenging. As a result, the Podman Desktop initiative started with the goal to minimize the discrepancies.&lt;/p&gt; &lt;h2&gt;An introduction to Podman Desktop&lt;/h2&gt; &lt;p&gt;The Podman community has been working on Podman Desktop for the past few months. The initial scope is to provide a single desktop GUI to help interact with Podman or other Kubernetes environments for application developers.&lt;/p&gt; &lt;p&gt;You can install Podman with one click and get containers running on any machine in a couple of minutes. Then, you can complete daily container tasks such as starting and stopping the container engine, building images, or interacting with containers.&lt;/p&gt; &lt;p&gt;It's okay if all you want to do for now is install your container engine, view the status, or manage your Kubernetes environment in your system toolbar. Podman Desktop can also start and stop the container engine from here or switch your Kubernetes context.&lt;/p&gt; &lt;p&gt;When you open the Podman Desktop UI, the dashboard displays the status of your container engines. You will also see familiar tabs for containers, images, pods, and volumes.&lt;/p&gt; &lt;p&gt;The following is a list of most of the basic container functions supported:&lt;/p&gt; &lt;h3&gt;Images and containers&lt;/h3&gt; &lt;ul&gt;&lt;li aria-level="1"&gt;Pulling and building images&lt;/li&gt; &lt;li aria-level="1"&gt;Starting/stopping containers, configuring ports&lt;/li&gt; &lt;li aria-level="1"&gt;Inspecting containers logs&lt;/li&gt; &lt;li aria-level="1"&gt;Opening a terminal in containers and viewing log output&lt;/li&gt; &lt;/ul&gt;&lt;h3&gt;Integration with registries&lt;/h3&gt; &lt;ul&gt;&lt;li aria-level="1"&gt;Configure multiple OCI registries&lt;/li&gt; &lt;li aria-level="1"&gt;Authenticate to registries&lt;/li&gt; &lt;li aria-level="1"&gt;Pull, tag, and push images to your registries&lt;/li&gt; &lt;/ul&gt;&lt;h3&gt;Volumes&lt;/h3&gt; &lt;ul&gt;&lt;li aria-level="1"&gt;Browse and Inspect volumes created&lt;/li&gt; &lt;li aria-level="1"&gt;Configure proxies and Internal VPN&lt;/li&gt; &lt;/ul&gt;&lt;h2&gt;Working with pods on Kubernetes&lt;/h2&gt; &lt;p&gt;Podman provides the capability to run pods in your local environment in a lightweight fashion. This enables you to easily work with Kubernetes objects directly in your developer environment without the need to spin up a local Kubernetes cluster. Watch this short videoillustrating the creation of a pod:&lt;/p&gt; &lt;div class="video-embed-field-provider-youtube video-embed-field-responsive-video"&gt; &lt;/div&gt; &lt;p&gt;Podman Desktop helps you gradually move from individual containers to pods with multiple containers and Kubernetes. You will find features enabling you to transition containers into pods, generate Kubernetes YAML, and deploy them on Kubernetes environments. Watch this quick video illustrating the deployment of a pod on Kubernetes:&lt;/p&gt; &lt;div class="video-embed-field-provider-youtube video-embed-field-responsive-video"&gt; &lt;/div&gt; &lt;p&gt;Kubernetes features include:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;Running pods locally with Podman&lt;/li&gt; &lt;li&gt;Creating pods from existing containers&lt;/li&gt; &lt;li&gt;Generating Kubernetes YAML&lt;/li&gt; &lt;li&gt;Deploying local pods to Kubernetes environments&lt;/li&gt; &lt;/ul&gt;&lt;h2&gt;Future improvements to Podman Desktop&lt;/h2&gt; &lt;p&gt;In the coming months, we will explore moving from containers to pods to Kubernetes.&lt;/p&gt; &lt;p&gt;Even with the theoretical portability of containers, getting them to run on Kubernetes can be challenging. While more developers are exposed to Kubernetes (and Kubernetes YAML), they need to test the application in an environment more representative of production. Developers should not be required to understand the complexity of Kubernetes.&lt;/p&gt; &lt;p&gt;Podman Desktop will continue to enable developers to quickly develop their applications, provide fast turnarounds, and make it easier to test applications on Kubernetes environments.&lt;/p&gt; &lt;h2&gt;Resources for Podman Desktop&lt;/h2&gt; &lt;p&gt;Ready to try it out for yourself? &lt;a href="https://podman-desktop.io/"&gt;Podman Desktop&lt;/a&gt; installers are available on &lt;a href="https://podman-desktop.io/downloads"&gt;Windows, macOS, and Linux&lt;/a&gt;. Or you can use your favorite package manager, such as Brew, Flathub, Chocolatey, Scoop, or Windows Package Manager.&lt;/p&gt; &lt;p&gt;Learn more about Podman Desktop by visiting the &lt;a href="https://developers.redhat.com/search?t=podman&amp;s=most-recent"&gt;Red Hat Developer Podman&lt;/a&gt; web page and the Podman Desktop &lt;a href="https://github.com/containers/podman-desktop"&gt;GitHub repository&lt;/a&gt;. You can also join us on the &lt;a href="https://podman.io/"&gt;Podman site&lt;/a&gt; and &lt;a href="https://github.com/containers/podman"&gt;repository&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Get early access to the &lt;a href="https://developers.redhat.com/e-books/podman-action-early-access"&gt;Podman in Action e-book&lt;/a&gt; written by Daniel Walsh. Daniel leads the Podman team at Red Hat. Discover easy-to-follow examples to learn Podman quickly, including steps to deploy a complete containerized web service.&lt;/p&gt; &lt;p&gt;Feel free to comment below. We would love to hear where you think this project should go. Please report bugs or share ideas for enhancements on GitHub. We also welcome you to join our feedback program or Discord chat.&lt;/p&gt; The post &lt;a href="https://developers.redhat.com/articles/2022/10/24/podman-expands-desktop" title="Podman expands to the Desktop"&gt;Podman expands to the Desktop&lt;/a&gt; appeared first on &lt;a href="https://developers.redhat.com/blog" title="Red Hat Developer"&gt;Red Hat Developer&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;</summary><dc:creator>Stevan Le Meur, Tim deBoer</dc:creator><dc:date>2022-10-24T20:59:37Z</dc:date></entry><entry><title>How odo 3.0 GA improves the developer experience</title><link rel="alternate" href="https://developers.redhat.com/articles/2022/10/24/odo-v3-ga-improves-developer-experience" /><author><name>Serena Chechile Nichols</name></author><id>46afa612-02b2-4116-97fd-9dcd118a4ca9</id><updated>2022-10-24T17:30:00Z</updated><published>2022-10-24T17:30:00Z</published><summary type="html">&lt;p&gt;Developers love command-line productivity. We get that. This article describes how odo, a developer-focused command-line interface (CLI) for Red Hat OpenShift and Kubernetes, simplifies cloud-native development.&lt;/p&gt; &lt;p&gt;odo supports fast, iterative development and lets developers focus on what's most important to them—code. The odo 3.0 GA release provides new and improved user experience and security. This new release also allows developers to automatically detect bindable resources, making it easier to connect applications to services.&lt;/p&gt; &lt;h2&gt;6 ways odo 3.0 GA improves the developer experience&lt;/h2&gt; &lt;p&gt;The following sections describe six odo 3.0 GA features and commands that improve the developer experience.&lt;/p&gt; &lt;h3&gt;1. Interactive commands&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;odo&lt;/strong&gt; has new interactive commands to help developers with the discoverability of capabilities. Many odo commands provide an interactive and direct mode. In interactive mode, enter the command without options, and then you get a prompt for responses. In direct mode, enter the full command, including options, and there are no prompts provided.&lt;/p&gt; &lt;h3&gt;2. The odo init command&lt;/h3&gt; &lt;p&gt;Now, developers can use &lt;code&gt;odo init&lt;/code&gt;. Version 3.0 can auto-detect your source code and inject the appropriate language/framework template. Alternatively, you can begin with a starter project quickly.&lt;/p&gt; &lt;p&gt;&lt;img height="254" src="https://lh4.googleusercontent.com/SO9o-IjhWRotBRLcIajHkphJpIvY12XlrRa2yPjlvZqn0eSaqtKL4Ry6zA14A30YHzE29XsnVK7Vsc5NDkFGI9vJkEt-VEOOz2ZnzzqBAazBpJ7HQOnKI0ZRK1l5pfh8Nv9eYSe3MQbLUrNy5-RlfqzZHPpTaFA3KwM6ggKdj6vftC0X-r1Gq_DMSA" width="622" /&gt;&lt;/p&gt; &lt;h3&gt;3. The odo dev command&lt;/h3&gt; &lt;p&gt;Start development on your application with &lt;code&gt;odo dev&lt;/code&gt; to deploy the app to the cluster in dev mode. This command watches for changes in your local folder and automatically redeploys them to your cluster, allowing you to see real-time updates as you code.&lt;/p&gt; &lt;p&gt;&lt;code&gt;odo dev&lt;/code&gt; runs in the foreground until the user hits &lt;strong&gt;Ctrl+C&lt;/strong&gt;. It continuously watches the directory for any new changes (including the changes occurring in the Devfile) and automatically syncs them with the application running on the cluster.&lt;/p&gt; &lt;h3&gt;4. The odo deploy command&lt;/h3&gt; &lt;p&gt;Run the outer loop of your development cycle with &lt;code&gt;odo deploy&lt;/code&gt;. Use &lt;code&gt;odo deploy&lt;/code&gt; for the following scenarios:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;You are working in a production environment.&lt;/li&gt; &lt;li&gt;The application is ready for public viewing.&lt;/li&gt; &lt;li&gt;You require building and pushing the container.&lt;/li&gt; &lt;li&gt;You need custom Kubernetes YAML for your production environment.&lt;/li&gt; &lt;/ul&gt;&lt;h3&gt;5. The odo add binding command&lt;/h3&gt; &lt;p&gt;Use &lt;code&gt;odo add binding&lt;/code&gt; to connect to an operator-backed service in any namespace. This command has an interactive mode that lists bindable services across all the namespaces and a way to customize the related configuration, providing a fast and easy experience for connecting to a service. Currently, the bindable services listed are operator-backed services that support binding via the service binding operator. To learn more about the operators supported by the service binding operator, refer to its &lt;a href="https://github.com/redhat-developer/service-binding-operator#known-bindable-operators"&gt;README&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;6. odo works with OpenShift and Kubernetes&lt;/h3&gt; &lt;p&gt;Last but not least, &lt;strong&gt;odo&lt;/strong&gt; works with OpenShift or any Kubernetes cluster. You pick! We have even added aliases to match the mental models that worked with OpenShift or Kubernetes.&lt;/p&gt; &lt;p&gt;OpenShift developers can use the following commands:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;&lt;code&gt;odo create project&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;odo list project&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;odo set project&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;odo delete project&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;The following commands may resonate better on Kubernetes:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;&lt;code&gt;odo create namespace&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;odo list namespace&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;odo set namespace&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;odo delete namespace&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;h2&gt;Ready to try odo 3.0?&lt;/h2&gt; &lt;p&gt;Head over to &lt;a href="https://odo.dev"&gt;odo.dev&lt;/a&gt;. Use our&lt;a href="https://odo.dev/docs/overview/installation/"&gt; installation guide&lt;/a&gt; and give it a try! Do you want to deploy your app to a cluster? Get free access with &lt;a href="https://developers.redhat.com/developer-sandbox"&gt;Developer Sandbox for OpenShift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;OpenShift Toolkit for IDEs on Visual Studio Code and IntelliJ will soon support these new odo development workflows. Stay tuned for updates later this month.&lt;/p&gt; &lt;p&gt;For more information about odo 3.0 GA, check out the following resources:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;Watch the &lt;a href="https://www.youtube.com/watch?v=qc4GUydBnvk"&gt;odo 3.0 video tutorial&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Read the &lt;a href="http://odo.dev/blog/odo-v3-release"&gt;odo 3.0 GA release announcement&lt;/a&gt; on odo.dev.&lt;/li&gt; &lt;li&gt;&lt;a href="https://odo.dev/docs/user-guides/v3-migration-guide/#commands-added-modified-or-removed-in-v3"&gt;Learn more&lt;/a&gt; about the commands added, modified, or removed in the 3.0 release.&lt;/li&gt; &lt;/ul&gt; The post &lt;a href="https://developers.redhat.com/articles/2022/10/24/odo-v3-ga-improves-developer-experience" title="How odo 3.0 GA improves the developer experience"&gt;How odo 3.0 GA improves the developer experience&lt;/a&gt; appeared first on &lt;a href="https://developers.redhat.com/blog" title="Red Hat Developer"&gt;Red Hat Developer&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;</summary><dc:creator>Serena Chechile Nichols</dc:creator><dc:date>2022-10-24T17:30:00Z</dc:date></entry></feed>
